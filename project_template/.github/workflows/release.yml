name: Release Packages

on:
  release:
    types:
      - published

jobs:
  release-npm:
    name: Release Dash Platform to NPM
    runs-on: ubuntu-20.04
    steps:
      - name: Wait for tests to succeed
        uses: lewagon/wait-on-check-action@v1.1.1
        with:
          ref: ${{ github.ref }}
          check-name: 'Run Platform Test Suite'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          wait-interval: 60

      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Enable NPM cache
        uses: actions/cache@v2
        with:
          path: '~/.npm'
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install NPM dependencies
        run: npm ci

      - name: Set release tag
        uses: actions/github-script@v5
        id: tag
        with:
          result-encoding: string
          script: |
            const tag = context.payload.release.tag_name;
            const [, major, minor] = tag.match(/^v([0-9]+)\.([0-9]+)/);
            return (tag.includes('dev') ? `${major}.${minor}-dev` : 'latest');

      - name: Publish NPM package
        run: npm publish --workspaces --tag ${{ steps.tag.outputs.result }}

  release-docker:
    name: Release Dash Platform to Docker Hub
    runs-on: ubuntu-20.04
    needs: release-npm
    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker BuildX
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          version: v0.6.3
          install: true
          driver-opts: image=moby/buildkit:buildx-stable-1

      - name: Enable buildkit cache
        uses: actions/cache@v2
        with:
          path: /tmp/buildkit-cache/buildkit-state.tar
          key: ${{ runner.os }}-buildkit-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildkit-

      - name: Load buildkit state from cache
        uses: dashevo/gh-action-cache-buildkit-state@v1
        with:
          builder: buildx_buildkit_${{ steps.buildx.outputs.name }}0
          cache-path: /tmp/buildkit-cache
          cache-max-size: 2g

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set suffix to Docker tags
        uses: actions/github-script@v5
        id: suffix
        with:
          result-encoding: string
          script: "return (context.payload.release.tag_name.includes('-dev') ? '-dev' : '');"

      - name: Set Docker tags and labels for DAPI
        id: dapi_docker_meta
        uses: docker/metadata-action@v3
        with:
          images: dashpay/dapi
          tags: |
            type=match,pattern=v(\d+),group=1
            type=match,pattern=v(\d+.\d+),group=1
            type=match,pattern=v(\d+.\d+.\d+),group=1
            type=match,pattern=v(.*),group=1,suffix=,enable=${{ contains(github.event.release.tag_name, '-dev') }}
          flavor: |
            latest=${{ !contains(github.event.release.tag_name, '-dev') }}
            suffix=${{ steps.suffix.outputs.result }}

      - name: Build and push Docker image for DAPI
        id: dapi_docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./dapi
          builder: ${{ steps.buildx.outputs.name }}
          file: ./dapi/Dockerfile
          push: true
          tags: ${{ steps.dapi_docker_meta.outputs.tags }}
          labels: ${{ steps.dapi_docker_meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64

      - name: Set Docker tags and labels for Drive
        id: drive_docker_meta
        uses: docker/metadata-action@v3
        with:
          images: dashpay/dapi
          tags: |
            type=match,pattern=v(\d+),group=1
            type=match,pattern=v(\d+.\d+),group=1
            type=match,pattern=v(\d+.\d+.\d+),group=1
            type=match,pattern=v(.*),group=1,suffix=,enable=${{ contains(github.event.release.tag_name, '-dev') }}
          flavor: |
            latest=${{ !contains(github.event.release.tag_name, '-dev') }}
            suffix=${{ steps.suffix.outputs.result }}

      - name: Build and push Docker image for Drive
        id: drive_docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./drive
          builder: ${{ steps.buildx.outputs.name }}
          file: ./drive/Dockerfile
          push: true
          tags: ${{ steps.drive_docker_meta.outputs.tags }}
          labels: ${{ steps.drive_docker_meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
